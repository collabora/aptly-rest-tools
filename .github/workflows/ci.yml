name: test suite
on:
  push:
    tags:
      - '*'
    branches-ignore:
      - "gh-readonly-queue/**"
  pull_request:
  merge_group:

env:
  REGISTRY: ghcr.io
  IMAGE_REPOSITORY: ${{ github.repository }}

jobs:
  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.66.0
      - run: cargo test --all-targets --all-features

  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.66.0
        with:
            components: rustfmt
      - run: cargo fmt --all --check

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.66.0
        with:
            components: clippy
      - run: cargo clippy --all-targets -- -D warnings

  docker-image:
    name: Docker image build
    runs-on: ubuntu-latest
    needs:
    - test
    - fmt
    - clippy

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: latest-snapshots

    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v4
        with:
          tags: |
            # explicitly set the default behavior, so we can
            # customize things later
            # see https://github.com/docker/metadata-action#tags-input
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
          images: |
            # this one is just for backward compatibility (April 2025)
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}
            # use this one
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.${{ env.IMAGE_NAME }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  allgreen:
    if: always()
    needs:
    - test
    - fmt
    - clippy
    - docker-image
    runs-on: Ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
